{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"About"},{"location":"#about","text":"For full documentation visit mkdocs.org .","title":"About"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"contact/","text":"there\u2019s gotta be some way to get a hold of me\u2026","title":"Contact"},{"location":"blog/","text":"Blog Posts yeah yeah yeah","title":"Blog Posts"},{"location":"blog/#blog-posts","text":"yeah yeah yeah","title":"Blog Posts"},{"location":"blog/h3_spatial_joins/","text":"Wicked Fast Spatial Joins with H3 Parent/child partial ordering We can define a partial ordering on H3 cells according to the parent/child relationships/containments between cells. Let \\(a\\) and \\(b\\) be H3 cells. If they are the same cell , we\u2019ll say \\(a = b\\) . If \\(a\\) is a child cell of\u2014or equal to\u2014 \\(b\\) , we\u2019ll say \\[ a \\preceq b. \\] If \\(a\\) is strictly a child cell of \\(b\\) , we\u2019ll say \\[ a \\prec b. \\] If either \\(a \\preceq b\\) or \\(a \\succeq b\\) , we\u2019ll say that \\(a\\) and \\(b\\) are comparable and write $$ a \\sim b. $$ If \\(a \\npreceq b\\) and \\(a \\nsucceq b\\) , we\u2019ll say that \\(a\\) and \\(b\\) are incomparable and write $$ a \\nsim b. $$ Total ordering of H3 cells As integers, consider the lower 52 bit mask of cells. Cells can be ordered in this way. We\u2019ll call this the \u201clower 52 ordering\u201d. We\u2019ll use the normal inequality symbols when referring to this ordering; \\(a < b\\) if \\(a\\) comes before \\(b\\) in the lower 52 ordering. Note that: \\(a \\prec b \\implies a < b\\) \\(a \\preceq b \\implies a \\leq b\\) However, the converse does not hold. If \\(a < b\\) but \\(a \\nprec b\\) , we\u2019ll use the symbol \\(a \\ll b\\) . Thus symbol \u201c \\(<\\) \u201d defines a total order on cells symbol \u201c \\(\\prec\\) \u201d defines a partial order on cells Which way to order? Is it better to do natural (ascending) order, or descending order for the algorithms? ascending: children to the left, parents to the right descending: parents to the left, children to the right For the fast compact algo, we want to make sure the process ends with the elements packed to the left, so that we can realloc the memory (without having to move all the elements to the front of the array). Plotting would a gantt chart almost be better for plotting parent/child relationships? what about a mermaid flow LR flowchart? compact algo first sort in python, first do a iterator to pass through to remove duplicates and children? iterator might be nice, because it focuses us on the algo instead of the indices (at least figure it out in python first) intersection algo does it make sense to do the big cells first (instead of alternating left-to-right) because the big cells have a better chance of gobbling up smaller cells. doing the small cells can\u2019t gobble, but they can cut off things we don\u2019t need to inspect https://cs.stackexchange.com/questions/37073/first-intersection-of-two-arrays-of-integers-double-binary-search-feasible","title":"Wicked Fast Spatial Joins with H3"},{"location":"blog/h3_spatial_joins/#wicked-fast-spatial-joins-with-h3","text":"","title":"Wicked Fast Spatial Joins with H3"},{"location":"blog/h3_spatial_joins/#parentchild-partial-ordering","text":"We can define a partial ordering on H3 cells according to the parent/child relationships/containments between cells. Let \\(a\\) and \\(b\\) be H3 cells. If they are the same cell , we\u2019ll say \\(a = b\\) . If \\(a\\) is a child cell of\u2014or equal to\u2014 \\(b\\) , we\u2019ll say \\[ a \\preceq b. \\] If \\(a\\) is strictly a child cell of \\(b\\) , we\u2019ll say \\[ a \\prec b. \\] If either \\(a \\preceq b\\) or \\(a \\succeq b\\) , we\u2019ll say that \\(a\\) and \\(b\\) are comparable and write $$ a \\sim b. $$ If \\(a \\npreceq b\\) and \\(a \\nsucceq b\\) , we\u2019ll say that \\(a\\) and \\(b\\) are incomparable and write $$ a \\nsim b. $$","title":"Parent/child partial ordering"},{"location":"blog/h3_spatial_joins/#total-ordering-of-h3-cells","text":"As integers, consider the lower 52 bit mask of cells. Cells can be ordered in this way. We\u2019ll call this the \u201clower 52 ordering\u201d. We\u2019ll use the normal inequality symbols when referring to this ordering; \\(a < b\\) if \\(a\\) comes before \\(b\\) in the lower 52 ordering. Note that: \\(a \\prec b \\implies a < b\\) \\(a \\preceq b \\implies a \\leq b\\) However, the converse does not hold. If \\(a < b\\) but \\(a \\nprec b\\) , we\u2019ll use the symbol \\(a \\ll b\\) . Thus symbol \u201c \\(<\\) \u201d defines a total order on cells symbol \u201c \\(\\prec\\) \u201d defines a partial order on cells","title":"Total ordering of H3 cells"},{"location":"blog/h3_spatial_joins/#which-way-to-order","text":"Is it better to do natural (ascending) order, or descending order for the algorithms? ascending: children to the left, parents to the right descending: parents to the left, children to the right For the fast compact algo, we want to make sure the process ends with the elements packed to the left, so that we can realloc the memory (without having to move all the elements to the front of the array).","title":"Which way to order?"},{"location":"blog/h3_spatial_joins/#plotting","text":"would a gantt chart almost be better for plotting parent/child relationships? what about a mermaid flow LR flowchart?","title":"Plotting"},{"location":"blog/h3_spatial_joins/#compact-algo","text":"first sort in python, first do a iterator to pass through to remove duplicates and children? iterator might be nice, because it focuses us on the algo instead of the indices (at least figure it out in python first)","title":"compact algo"},{"location":"blog/h3_spatial_joins/#intersection-algo","text":"does it make sense to do the big cells first (instead of alternating left-to-right) because the big cells have a better chance of gobbling up smaller cells. doing the small cells can\u2019t gobble, but they can cut off things we don\u2019t need to inspect https://cs.stackexchange.com/questions/37073/first-intersection-of-two-arrays-of-integers-double-binary-search-feasible","title":"intersection algo"},{"location":"blog/h3_spatial_joins/notes/","text":"big ideas H3 ~= Hilbert curve? eh, people will want to see that transform spatial problem with weird data formats into a standard CS problem, ordered searching and sorting summarize collections of hexes by their bounding hexes that lets you skip lots of computation you have to work in the H3 space translate everything there, and operations become fast accept the geo accuracy tradeoffs compression as the default for storage/computation!","title":"big ideas"},{"location":"blog/h3_spatial_joins/notes/#big-ideas","text":"H3 ~= Hilbert curve? eh, people will want to see that transform spatial problem with weird data formats into a standard CS problem, ordered searching and sorting summarize collections of hexes by their bounding hexes that lets you skip lots of computation you have to work in the H3 space translate everything there, and operations become fast accept the geo accuracy tradeoffs compression as the default for storage/computation!","title":"big ideas"},{"location":"notes/","text":"Rough Notes Mac Setup MkDocs on Github Pages MkDocs/Material Configuration Markdown notes (Technical) Writing links Programming Talks I Like","title":"Rough Notes"},{"location":"notes/#rough-notes","text":"Mac Setup MkDocs on Github Pages MkDocs/Material Configuration Markdown notes (Technical) Writing links Programming Talks I Like","title":"Rough Notes"},{"location":"notes/coding_talks/","text":"Programming Talks I Like Python (but really, widely applicable) Stop Writing Classes The Clean Architecture in Python Beazley\u2019s Generators and Coroutines Trilogy Generator Tricks for Systems Programmers A Curious Course on Coroutines and Concurrency Generators: The Final Frontier Not Necessarily Python (but probably very applicable) Simple Made Easy","title":"Programming Talks I Like"},{"location":"notes/coding_talks/#programming-talks-i-like","text":"","title":"Programming Talks I Like"},{"location":"notes/coding_talks/#python-but-really-widely-applicable","text":"Stop Writing Classes The Clean Architecture in Python Beazley\u2019s Generators and Coroutines Trilogy Generator Tricks for Systems Programmers A Curious Course on Coroutines and Concurrency Generators: The Final Frontier","title":"Python (but really, widely applicable)"},{"location":"notes/coding_talks/#not-necessarily-python-but-probably-very-applicable","text":"Simple Made Easy","title":"Not Necessarily Python (but probably very applicable)"},{"location":"notes/markdown_notes/","text":"Markdown notes Nice link syntax I forget where I first saw this, but they were recommending Chris Allen\u2019s learning path . Elsewhere, they spoke about higher-order functions. I guess you can use any bit of text for the second kind of link. The above text is generated with this Markdown: [ learnhaskell ]: https://github.com/bitemyapp/learnhaskell [ higher-order ]: http://learnyouahaskell.com/higher-order-functions [ you can use any bit of text ]: https://ajfriend.github.io/ I forget where I first saw this, but they were recommending Chris Allen's [ learning path ][ learnhaskell ]. Elsewhere, they spoke about [ higher-order ][] functions. I guess [ you can use any bit of text ][] for the second kind of link. The definitions can go before or after their uses.","title":"Markdown notes"},{"location":"notes/markdown_notes/#markdown-notes","text":"","title":"Markdown notes"},{"location":"notes/markdown_notes/#nice-link-syntax","text":"I forget where I first saw this, but they were recommending Chris Allen\u2019s learning path . Elsewhere, they spoke about higher-order functions. I guess you can use any bit of text for the second kind of link. The above text is generated with this Markdown: [ learnhaskell ]: https://github.com/bitemyapp/learnhaskell [ higher-order ]: http://learnyouahaskell.com/higher-order-functions [ you can use any bit of text ]: https://ajfriend.github.io/ I forget where I first saw this, but they were recommending Chris Allen's [ learning path ][ learnhaskell ]. Elsewhere, they spoke about [ higher-order ][] functions. I guess [ you can use any bit of text ][] for the second kind of link. The definitions can go before or after their uses.","title":"Nice link syntax"},{"location":"notes/mkdocs_material_config/","text":"MkDocs/Material config Admonitions https://squidfunk.github.io/mkdocs-material/reference/admonitions/ Note You can make admonition blocks! Warning They\u2019re super fun. Config markdown_extensions : - admonition - pymdownx.details - pymdownx.superfences Code !!! note You can make admonition blocks! !!! warning They're super fun. ??? tldr \"Config\" ```yaml markdown_extensions : - admonition - pymdownx.details - pymdownx.superfences ``` Content tabs https://squidfunk.github.io/mkdocs-material/reference/content-tabs/ Python 3 for i in range ( 10 ): print ( x ) Python 2 for i in xrange ( 10 ): print x Code === \"Python 3\" ```python for i in range(10): print(x) ``` === \"Python 2\" ```python for i in xrange(10): print x ``` Config markdown_extensions : - pymdownx.tabbed - pymdownx.superfences Code highlighting import h3.api.numpy_int as h3 def foo (): print ( 'hello' ) Config markdown_extensions : - codehilite SmartyPants punctuation https://python-markdown.github.io/extensions/ https://python-markdown.github.io/extensions/smarty/ For en-dash, (\u2013), em-dash (\u2014), and ellipsis (\u2026). Code For en-dash, (--), em-dash (---), and ellipsis (...). Config markdown_extensions : - smarty Math In-line and block math to find an \\(x \\in \\lbrace y \\mid 0 \\preceq y \\preceq \\mathbf{1} \\rbrace\\) : \\[ \\begin{array}{ll} \\mbox{minimize} & (1/2)\\|Ax-b\\|_2^2 + \\lambda \\|x\\|_1 \\\\ \\mbox{subject to} & 0 \\preceq x \\preceq \\mathbf{1} \\\\ & \\|x\\|_2 \\leq 1, \\end{array} \\] Code In-line and block math to find an $x \\in \\lbrace y \\mid 0 \\preceq y \\preceq \\mathbf{1} \\rbrace$: $$ \\begin{array}{ll} \\mbox{minimize} & (1/2)\\|Ax-b\\| _2^2 + \\lambda \\|x\\|_ 1 \\\\ \\mbox{subject to} & 0 \\preceq x \\preceq \\mathbf{1} \\\\ & \\|x\\|_2 \\leq 1, \\end{array} $$ Config markdown_extensions : - pymdownx.arithmatex : generic : true extra_javascript : - javascripts/config.js - https://polyfill.io/v3/polyfill.min.js?features=es6 - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js Magiclink Automatically recognizes links in markdown: www.google.com Config markdown_extensions : - pymdownx.magiclink Tables https://squidfunk.github.io/mkdocs-material/reference/data-tables/ https://squidfunk.github.io/mkdocs-material/reference/data-tables/ Method Description GET Fetch resource PUT Update resource DELETE Delete resource Code | Method | Description | |----------|-----------------| | `GET` | Fetch resource | | `PUT` | Update resource | | `DELETE` | Delete resource | Config None! Definition list Lorem ipsum dolor sit amet Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Cras arcu libero Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Code `Lorem ipsum dolor sit amet` : Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. `Cras arcu libero` : Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Config markdown_extensions : - def_list Task list Lorem ipsum dolor sit amet, consectetur adipiscing elit Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Code * [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit * [ ] Vestibulum convallis sit amet nisi a tincidunt * [x] In hac habitasse platea dictumst * [x] In scelerisque nibh non dolor mollis congue sed et metus * [ ] Praesent sed risus massa * [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Config markdown_extensions : - pymdownx.tasklist : custom_checkbox : true References https://python-markdown.github.io/extensions/ http://madrus4u.com/mdocs/engine/styling/ https://code.kx.com/q/about/sg/ https://facelessuser.github.io/pymdown-extensions/","title":"MkDocs/Material config"},{"location":"notes/mkdocs_material_config/#mkdocsmaterial-config","text":"","title":"MkDocs/Material config"},{"location":"notes/mkdocs_material_config/#admonitions","text":"https://squidfunk.github.io/mkdocs-material/reference/admonitions/ Note You can make admonition blocks! Warning They\u2019re super fun. Config markdown_extensions : - admonition - pymdownx.details - pymdownx.superfences Code !!! note You can make admonition blocks! !!! warning They're super fun. ??? tldr \"Config\" ```yaml markdown_extensions : - admonition - pymdownx.details - pymdownx.superfences ```","title":"Admonitions"},{"location":"notes/mkdocs_material_config/#content-tabs","text":"https://squidfunk.github.io/mkdocs-material/reference/content-tabs/ Python 3 for i in range ( 10 ): print ( x ) Python 2 for i in xrange ( 10 ): print x Code === \"Python 3\" ```python for i in range(10): print(x) ``` === \"Python 2\" ```python for i in xrange(10): print x ``` Config markdown_extensions : - pymdownx.tabbed - pymdownx.superfences","title":"Content tabs"},{"location":"notes/mkdocs_material_config/#code-highlighting","text":"import h3.api.numpy_int as h3 def foo (): print ( 'hello' ) Config markdown_extensions : - codehilite","title":"Code highlighting"},{"location":"notes/mkdocs_material_config/#smartypants-punctuation","text":"https://python-markdown.github.io/extensions/ https://python-markdown.github.io/extensions/smarty/ For en-dash, (\u2013), em-dash (\u2014), and ellipsis (\u2026). Code For en-dash, (--), em-dash (---), and ellipsis (...). Config markdown_extensions : - smarty","title":"SmartyPants punctuation"},{"location":"notes/mkdocs_material_config/#math","text":"In-line and block math to find an \\(x \\in \\lbrace y \\mid 0 \\preceq y \\preceq \\mathbf{1} \\rbrace\\) : \\[ \\begin{array}{ll} \\mbox{minimize} & (1/2)\\|Ax-b\\|_2^2 + \\lambda \\|x\\|_1 \\\\ \\mbox{subject to} & 0 \\preceq x \\preceq \\mathbf{1} \\\\ & \\|x\\|_2 \\leq 1, \\end{array} \\] Code In-line and block math to find an $x \\in \\lbrace y \\mid 0 \\preceq y \\preceq \\mathbf{1} \\rbrace$: $$ \\begin{array}{ll} \\mbox{minimize} & (1/2)\\|Ax-b\\| _2^2 + \\lambda \\|x\\|_ 1 \\\\ \\mbox{subject to} & 0 \\preceq x \\preceq \\mathbf{1} \\\\ & \\|x\\|_2 \\leq 1, \\end{array} $$ Config markdown_extensions : - pymdownx.arithmatex : generic : true extra_javascript : - javascripts/config.js - https://polyfill.io/v3/polyfill.min.js?features=es6 - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js","title":"Math"},{"location":"notes/mkdocs_material_config/#magiclink","text":"Automatically recognizes links in markdown: www.google.com Config markdown_extensions : - pymdownx.magiclink","title":"Magiclink"},{"location":"notes/mkdocs_material_config/#tables","text":"https://squidfunk.github.io/mkdocs-material/reference/data-tables/ https://squidfunk.github.io/mkdocs-material/reference/data-tables/ Method Description GET Fetch resource PUT Update resource DELETE Delete resource Code | Method | Description | |----------|-----------------| | `GET` | Fetch resource | | `PUT` | Update resource | | `DELETE` | Delete resource | Config None!","title":"Tables"},{"location":"notes/mkdocs_material_config/#definition-list","text":"Lorem ipsum dolor sit amet Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Cras arcu libero Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Code `Lorem ipsum dolor sit amet` : Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. `Cras arcu libero` : Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Config markdown_extensions : - def_list","title":"Definition list"},{"location":"notes/mkdocs_material_config/#task-list","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Code * [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit * [ ] Vestibulum convallis sit amet nisi a tincidunt * [x] In hac habitasse platea dictumst * [x] In scelerisque nibh non dolor mollis congue sed et metus * [ ] Praesent sed risus massa * [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Config markdown_extensions : - pymdownx.tasklist : custom_checkbox : true","title":"Task list"},{"location":"notes/mkdocs_material_config/#references","text":"https://python-markdown.github.io/extensions/ http://madrus4u.com/mdocs/engine/styling/ https://code.kx.com/q/about/sg/ https://facelessuser.github.io/pymdown-extensions/","title":"References"},{"location":"notes/tech_writing/","text":"(Technical) Writing Links https://github.com/rubymorillo/pocket-tech-writing-list#the-pocket-technical-writing-list-","title":"(Technical) Writing Links"},{"location":"notes/tech_writing/#technical-writing-links","text":"https://github.com/rubymorillo/pocket-tech-writing-list#the-pocket-technical-writing-list-","title":"(Technical) Writing Links"},{"location":"notes/mac_setup/","text":"Mac Setup Set up Oh My Zsh Set up Python Markdown and LaTeX with Pandoc Tools fzf ? https://www.freecodecamp.org/news/fzf-a-command-line-fuzzy-finder-missing-demo-a7de312403ff/ ripgrep ?","title":"Mac Setup"},{"location":"notes/mac_setup/#mac-setup","text":"Set up Oh My Zsh Set up Python Markdown and LaTeX with Pandoc","title":"Mac Setup"},{"location":"notes/mac_setup/#tools","text":"fzf ? https://www.freecodecamp.org/news/fzf-a-command-line-fuzzy-finder-missing-demo-a7de312403ff/ ripgrep ?","title":"Tools"},{"location":"notes/mac_setup/pandoc/","text":"Pandoc/Markdown/LaTeX brew install pandoc brew install --cask mactex The latest version of pandoc actually translates math to Word .docx files pretty well. \\[ \\sum_{i=1}^n (x + 1)^i \\] Use pandoc pandoc.md -o test.docx for Word or pandoc pandoc.md -o test.pdf for PDF. References TUG 2020 \u2014 John MacFarlane \u2014 Pandoc for TeXnicians Tikz https://www.overleaf.com/learn/latex/TikZ_package#Diagrams https://www.overleaf.com/learn/latex/LaTeX_Graphics_using_TikZ:_A_Tutorial_for_Beginners_(Part_1)%E2%80%94Basic_Drawing http://cremeronline.com/LaTeX/minimaltikz.pdf https://tex.stackexchange.com/questions/61429/how-to-draw-a-hexagonal-grid-with-numbers-in-the-cells https://tikzit.github.io/","title":"Pandoc/Markdown/LaTeX"},{"location":"notes/mac_setup/pandoc/#pandocmarkdownlatex","text":"brew install pandoc brew install --cask mactex The latest version of pandoc actually translates math to Word .docx files pretty well. \\[ \\sum_{i=1}^n (x + 1)^i \\] Use pandoc pandoc.md -o test.docx for Word or pandoc pandoc.md -o test.pdf for PDF.","title":"Pandoc/Markdown/LaTeX"},{"location":"notes/mac_setup/pandoc/#references","text":"TUG 2020 \u2014 John MacFarlane \u2014 Pandoc for TeXnicians Tikz https://www.overleaf.com/learn/latex/TikZ_package#Diagrams https://www.overleaf.com/learn/latex/LaTeX_Graphics_using_TikZ:_A_Tutorial_for_Beginners_(Part_1)%E2%80%94Basic_Drawing http://cremeronline.com/LaTeX/minimaltikz.pdf https://tex.stackexchange.com/questions/61429/how-to-draw-a-hexagonal-grid-with-numbers-in-the-cells https://tikzit.github.io/","title":"References"},{"location":"notes/mac_setup/python/","text":"Python setup I\u2019m using pyenv to manage the overall \u201csystem\u201d Python, and venv to manage per-project virtual environments. pyenv allows you to install multiple versions of Python on your system and switch between them. You can manage a global Python, or have more specific rules like per-directory or per shell. We\u2019ll just use it for our system Python since venv will handle the virtual environments for each project. One nice thing about pyenv is that it is independent of any Python install on your system, since it is just a collection of shell scripts. Set up pyenv brew install pyenv Following the pyenv instructions , we need to make sure the following is at the end of the shell configuration: if command -v pyenv 1 >/dev/null 2 > & 1 ; then eval \" $( pyenv init - ) \" fi Since we\u2019re using Oh My Zsh , we can put it into a file like ~/.oh-my-zsh/custom/for_pyenv.zsh using the command echo -e 'if command -v pyenv 1>/dev/null 2>&1; then\\n eval \"$(pyenv init -)\"\\nfi' >> ~/.oh-my-zsh/custom/for_pyenv.zsh Make sure to restart the shell to activate the changes. Preparing for installing new Pythons We then need to install any Python build dependencies before trying to add a new version of Python. Use the following: brew install openssl readline sqlite3 xz zlib New versions of Python can then be installed with a command like pyenv install 2 .7.8 Debugging This page is pretty good: https://github.com/pyenv/pyenv/wiki/Common-build-problems I was seeing this issue: > virtualenv /Users/ajfriend/.pyenv/shims/virtualenv: line 21: /usr/local/Cellar/pyenv/1.2.20/libexec/pyenv: No such file or directory but this was fixed by running pyenv rehash . Issues with zlib Note that you may see the warning below from brew : zlib is keg-only, which means it was not symlinked into /usr/local, because macOS already provides this software and installing another version in parallel can cause all kinds of trouble. For compilers to find zlib you may need to set: export LDFLAGS=\"-L/usr/local/opt/zlib/lib\" export CPPFLAGS=\"-I/usr/local/opt/zlib/include\" For pkg-config to find zlib you may need to set: export PKG_CONFIG_PATH=\"/usr/local/opt/zlib/lib/pkgconfig\" In that case, something like the flow below should work (based on this Stack Overflow answer ): brew install zlib export LDFLAGS = \"-L/usr/local/opt/zlib/lib\" export CPPFLAGS = \"-I/usr/local/opt/zlib/include\" pyenv install 3 .7.2 WARNING: The Python bz2 extension was not compiled. Missing the bzip2 lib? In this case, brew install bzip2 . You may also need to set compiler flags. If you need to set flags for both zlib and bz2 , you can concatenate the flags like export LDFLAGS = \"-L/usr/local/opt/zlib/lib -L/usr/local/opt/bzip2/lib\" export CPPFLAGS = \"-I/usr/local/opt/zlib/include -I/usr/local/opt/bzip2/include\" pyenv install 3 .9.0 pyenv commands pyenv versions shows all installed Python versions; * denotes the one currently active \u276f pyenv versions * system ( set by /Users/ajfriend/.pyenv/version ) 3 .7.9 3 .8.5 3 .9.0 pyenv install --list list all Python versions available for installation pyenv install 2.6.8 installs a version of python pyenv uninstall <version> pyenv version shows currently active Python \u276f pyenv version 3 .9.0 ( set by /Users/ajfriend/.pyenv/version ) pyenv global 2.7.6 set the \u201cglobal/system\u201d Python pyenv which <command> Displays the full path to the executable that pyenv will invoke when you run the given command \u276f pyenv which pip /Users/ajfriend/.pyenv/versions/3.9.0/bin/pip Using venv for virtual environments pyenv can help you manage virtual environments, but I prefer to do things manually with venv . I\u2019ll generally make a virtual environment for each separate project within that project\u2019s folder. To do this, first select the version of Python you\u2019d like to use for the virtual environment: pyenv versions pyenv global 3 .7.9 Then, within the project directory, run python -m venv env which will create a virtual environment in the env directory. Now you can activate/deactivate your environment, or just run things directly with commands like: env/bin/python env/bin/pip env/bin/jupyter lab Disabling pyenv pyenv global system will set things back to the \u201csystem\u201d Python, but pyenv is still handling the logic that determines which Python to use. To stop pyenv from using its shims to determine which Python to use, just remove the pyenv init code that we added above to our shell config file. For more details, see https://github.com/pyenv/pyenv#uninstalling-pyenv . pyenv references https://opensource.com/article/19/5/python-3-default-mac https://realpython.com/intro-to-pyenv/ https://github.com/pyenv/pyenv","title":"Python setup"},{"location":"notes/mac_setup/python/#python-setup","text":"I\u2019m using pyenv to manage the overall \u201csystem\u201d Python, and venv to manage per-project virtual environments. pyenv allows you to install multiple versions of Python on your system and switch between them. You can manage a global Python, or have more specific rules like per-directory or per shell. We\u2019ll just use it for our system Python since venv will handle the virtual environments for each project. One nice thing about pyenv is that it is independent of any Python install on your system, since it is just a collection of shell scripts.","title":"Python setup"},{"location":"notes/mac_setup/python/#set-up-pyenv","text":"brew install pyenv Following the pyenv instructions , we need to make sure the following is at the end of the shell configuration: if command -v pyenv 1 >/dev/null 2 > & 1 ; then eval \" $( pyenv init - ) \" fi Since we\u2019re using Oh My Zsh , we can put it into a file like ~/.oh-my-zsh/custom/for_pyenv.zsh using the command echo -e 'if command -v pyenv 1>/dev/null 2>&1; then\\n eval \"$(pyenv init -)\"\\nfi' >> ~/.oh-my-zsh/custom/for_pyenv.zsh Make sure to restart the shell to activate the changes.","title":"Set up pyenv"},{"location":"notes/mac_setup/python/#preparing-for-installing-new-pythons","text":"We then need to install any Python build dependencies before trying to add a new version of Python. Use the following: brew install openssl readline sqlite3 xz zlib New versions of Python can then be installed with a command like pyenv install 2 .7.8","title":"Preparing for installing new Pythons"},{"location":"notes/mac_setup/python/#debugging","text":"This page is pretty good: https://github.com/pyenv/pyenv/wiki/Common-build-problems I was seeing this issue: > virtualenv /Users/ajfriend/.pyenv/shims/virtualenv: line 21: /usr/local/Cellar/pyenv/1.2.20/libexec/pyenv: No such file or directory but this was fixed by running pyenv rehash . Issues with zlib Note that you may see the warning below from brew : zlib is keg-only, which means it was not symlinked into /usr/local, because macOS already provides this software and installing another version in parallel can cause all kinds of trouble. For compilers to find zlib you may need to set: export LDFLAGS=\"-L/usr/local/opt/zlib/lib\" export CPPFLAGS=\"-I/usr/local/opt/zlib/include\" For pkg-config to find zlib you may need to set: export PKG_CONFIG_PATH=\"/usr/local/opt/zlib/lib/pkgconfig\" In that case, something like the flow below should work (based on this Stack Overflow answer ): brew install zlib export LDFLAGS = \"-L/usr/local/opt/zlib/lib\" export CPPFLAGS = \"-I/usr/local/opt/zlib/include\" pyenv install 3 .7.2 WARNING: The Python bz2 extension was not compiled. Missing the bzip2 lib? In this case, brew install bzip2 . You may also need to set compiler flags. If you need to set flags for both zlib and bz2 , you can concatenate the flags like export LDFLAGS = \"-L/usr/local/opt/zlib/lib -L/usr/local/opt/bzip2/lib\" export CPPFLAGS = \"-I/usr/local/opt/zlib/include -I/usr/local/opt/bzip2/include\" pyenv install 3 .9.0","title":"Debugging"},{"location":"notes/mac_setup/python/#pyenv-commands","text":"pyenv versions shows all installed Python versions; * denotes the one currently active \u276f pyenv versions * system ( set by /Users/ajfriend/.pyenv/version ) 3 .7.9 3 .8.5 3 .9.0 pyenv install --list list all Python versions available for installation pyenv install 2.6.8 installs a version of python pyenv uninstall <version> pyenv version shows currently active Python \u276f pyenv version 3 .9.0 ( set by /Users/ajfriend/.pyenv/version ) pyenv global 2.7.6 set the \u201cglobal/system\u201d Python pyenv which <command> Displays the full path to the executable that pyenv will invoke when you run the given command \u276f pyenv which pip /Users/ajfriend/.pyenv/versions/3.9.0/bin/pip","title":"pyenv commands"},{"location":"notes/mac_setup/python/#using-venv-for-virtual-environments","text":"pyenv can help you manage virtual environments, but I prefer to do things manually with venv . I\u2019ll generally make a virtual environment for each separate project within that project\u2019s folder. To do this, first select the version of Python you\u2019d like to use for the virtual environment: pyenv versions pyenv global 3 .7.9 Then, within the project directory, run python -m venv env which will create a virtual environment in the env directory. Now you can activate/deactivate your environment, or just run things directly with commands like: env/bin/python env/bin/pip env/bin/jupyter lab","title":"Using venv for virtual environments"},{"location":"notes/mac_setup/python/#disabling-pyenv","text":"pyenv global system will set things back to the \u201csystem\u201d Python, but pyenv is still handling the logic that determines which Python to use. To stop pyenv from using its shims to determine which Python to use, just remove the pyenv init code that we added above to our shell config file. For more details, see https://github.com/pyenv/pyenv#uninstalling-pyenv .","title":"Disabling pyenv"},{"location":"notes/mac_setup/python/#pyenv-references","text":"https://opensource.com/article/19/5/python-3-default-mac https://realpython.com/intro-to-pyenv/ https://github.com/pyenv/pyenv","title":"pyenv references"},{"location":"notes/mac_setup/shell/","text":"oh-my-zsh Install Oh My Zsh and then the Powerlevel10k theme . With this setup, you\u2019ll add customizations to as .zsh files under the directory ~/.oh-my-zsh/custom . For example, you might add an aliases.zsh like ~/.oh-my-zsh/custom/aliases.zsh alias la = \"ls -altrh\" export EDITOR = 'emacs'","title":"oh-my-zsh"},{"location":"notes/mac_setup/shell/#oh-my-zsh","text":"Install Oh My Zsh and then the Powerlevel10k theme . With this setup, you\u2019ll add customizations to as .zsh files under the directory ~/.oh-my-zsh/custom . For example, you might add an aliases.zsh like ~/.oh-my-zsh/custom/aliases.zsh alias la = \"ls -altrh\" export EDITOR = 'emacs'","title":"oh-my-zsh"},{"location":"notes/mkdocs_gh-pages/","text":"MkDocs on Github Pages I\u2019m serving this site via a Github Pages . There are two ways to do this: As a \u201cuser or organization site\u201d , which means it is published from the master branch (necessarily?) of of a repo named like <username>.github.io , and is published at http://username.github.io/ . As a \u201cproject site\u201d , which is served from a specific branch (like gh-pages ) of an existing project\u2019s repo, and is\u2014published at http://username.github.io/repository . This site uses the first approach, to get the fancy-schmancy http://ajfriend.github.io/ URL. Update: New flow Forget all the stuff below. Everything is much cleaner using peaceiris/actions-gh-pages@v3 . This allows us to keep the built website files out of the repo. This flow let\u2019s us publish just the source files to the master branch, at which point the action is triggered, which builds the mkdocs site and pushes the result to the root directory of the gh-pages branch (or whatever other name we\u2019d like). We use the GitHub UI to select that we\u2019d like to serve our site from the root of the gh-pages branch, and everything works great! Workflow Make changes and merge to master . Push master to GitHub. Site gets build by the GH Action, and pushed/published from the gh-pages branch. Also, you should probably delete the gh-pages branch locally, since you\u2019ll never write to it directly. Old flow Publishing from master We configure the repo to serve the website from the docs folder on the master branch. This means we need to commit all the built website files to git, which is not ideal because: the process is a manual, and we\u2019re adding output files to version control. We also need to configure the mkdocs.yml file with docs_dir : src site_dir : docs so that it knows our markdown source is in src , and that it should build the output website to docs . Workflow Make changes to the markdown files. View changes locally with mkdocs serve . Build the website to docs with mkdocs build . Commit the changes, especially the entire output folder docs , and push to the upstream origin remote on Github. Github will serve whatever website files are in the docs folder after uploading to Github. Publishing from gh-pages TODO Is there an alternative approach that avoid having to build manually and commit the website files to git? For example, could I keep only the src files on the master branch of the repo, and build the website docs to the gh-pages branch? I might be able to setup a hook or GithubAction to do that when I push to the master branch. That might be what the links below are trying to suggest.. A few different ways using the gh-pages approach: https://squidfunk.github.io/mkdocs-material/publishing-your-site/ https://github.com/marketplace/actions/github-pages-action https://github.com/peaceiris/actions-gh-pages https://bluegenes.github.io/mkdocs-github-actions/","title":"MkDocs on Github Pages"},{"location":"notes/mkdocs_gh-pages/#mkdocs-on-github-pages","text":"I\u2019m serving this site via a Github Pages . There are two ways to do this: As a \u201cuser or organization site\u201d , which means it is published from the master branch (necessarily?) of of a repo named like <username>.github.io , and is published at http://username.github.io/ . As a \u201cproject site\u201d , which is served from a specific branch (like gh-pages ) of an existing project\u2019s repo, and is\u2014published at http://username.github.io/repository . This site uses the first approach, to get the fancy-schmancy http://ajfriend.github.io/ URL.","title":"MkDocs on Github Pages"},{"location":"notes/mkdocs_gh-pages/#update-new-flow","text":"Forget all the stuff below. Everything is much cleaner using peaceiris/actions-gh-pages@v3 . This allows us to keep the built website files out of the repo. This flow let\u2019s us publish just the source files to the master branch, at which point the action is triggered, which builds the mkdocs site and pushes the result to the root directory of the gh-pages branch (or whatever other name we\u2019d like). We use the GitHub UI to select that we\u2019d like to serve our site from the root of the gh-pages branch, and everything works great!","title":"Update: New flow"},{"location":"notes/mkdocs_gh-pages/#workflow","text":"Make changes and merge to master . Push master to GitHub. Site gets build by the GH Action, and pushed/published from the gh-pages branch. Also, you should probably delete the gh-pages branch locally, since you\u2019ll never write to it directly.","title":"Workflow"},{"location":"notes/mkdocs_gh-pages/#old-flow","text":"","title":"Old flow"},{"location":"notes/mkdocs_gh-pages/#publishing-from-master","text":"We configure the repo to serve the website from the docs folder on the master branch. This means we need to commit all the built website files to git, which is not ideal because: the process is a manual, and we\u2019re adding output files to version control. We also need to configure the mkdocs.yml file with docs_dir : src site_dir : docs so that it knows our markdown source is in src , and that it should build the output website to docs .","title":"Publishing from master"},{"location":"notes/mkdocs_gh-pages/#workflow_1","text":"Make changes to the markdown files. View changes locally with mkdocs serve . Build the website to docs with mkdocs build . Commit the changes, especially the entire output folder docs , and push to the upstream origin remote on Github. Github will serve whatever website files are in the docs folder after uploading to Github.","title":"Workflow"},{"location":"notes/mkdocs_gh-pages/#publishing-from-gh-pages","text":"TODO Is there an alternative approach that avoid having to build manually and commit the website files to git? For example, could I keep only the src files on the master branch of the repo, and build the website docs to the gh-pages branch? I might be able to setup a hook or GithubAction to do that when I push to the master branch. That might be what the links below are trying to suggest.. A few different ways using the gh-pages approach: https://squidfunk.github.io/mkdocs-material/publishing-your-site/ https://github.com/marketplace/actions/github-pages-action https://github.com/peaceiris/actions-gh-pages https://bluegenes.github.io/mkdocs-github-actions/","title":"Publishing from gh-pages"}]}